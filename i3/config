# VARIABLES
###########

# Output 
set $out1 eDP-1
#set $out2 DP1
set $out2 HDMI1

# Configure border style <normal|1pixel|pixel xx|none|pixel>
new_window none
new_float normal

# Hide borders
hide_edge_borders none

# change borders
bindsym $mod+u border none
bindsym $mod+y border pixel 1
bindsym $mod+n border normal

# Workspace
set $ws1 1
set $ws2 2
set $ws3 3
set $ws4 4
set $ws5 5
set $ws6 6
set $ws7 7
set $ws8 8
set $ws9 9

# Mod keys
set $mod Mod4
set $mod1 Mod1

# Terminal
set $terminal urxvt

#/VARIABLES
###########

# FONTS
#######

# Font for window titles. Will also be used by the bar unless a different font
# is used in the bar {} block below.
#font pango:Hack bold 8
font xft:URWGothic-Book 11

# This font is widely installed, provides lots of unicode glyphs, right-to-left
# text rendering and scalability on retina/hidpi displays (thanks to pango).
font pango:DejaVu Sans Mono 8

#/FONTS
#######

# WORKSPACES BEHAVIOUR
######################

# Setting default output workspaces
workspace $ws1 output $out1
workspace $ws2 output $out1
workspace $ws3 output $out1
workspace $ws4 output $out1
workspace $ws5 output $out1
workspace $ws6 output $out1
workspace $ws7 output $out1
workspace $ws8 output $out1
workspace $ws9 output $out2

#Workspace back and forth (press mod + WS again for going into the parent workspace)
workspace_auto_back_and_forth yes
bindsym $mod+b workspace back_and_forth
bindsym $mod+Shift+b move container to workspace back_and_forth; workspace back_and_forth

# Bind App to workspace
# Check class by : xprop
#assign [class="Google-chrome"] $ws2
#assign [class="Termite"] $ws1
#assign [class="Thunar"] $ws7
#assign [class="VirtualBox"] $ws4
#assign [class="skype"] $ws3
#assign [class="franz"] $ws3
#assign [class="Code"] $ws5
#assign [class="jetbrains-idea-ce"] $ws8
#assign [class="Spotify"] $ws6
#assign [class="Gitkraken"] $ws9
#assign [class="Vmplayer"] $ws4
#assign [class="org-srl-artes-albatros-albatros"] $ws9
#assign [instance="cheese|gimp"] $ws6

# Floating windows
for_window [window_role="task_dialog|bubble|page-info|Preferences|pop-up|sun-awt-X11-XDialogPeer"] floating enable
for_window [window_role="Open Files"] floating enable sticky
for_window [window_role="File Operation Progress"] floating enable sticky
for_window [window_role="Save As"] floating enable sticky
#for_window [class="mtp-ng-qt" window_role="Open"] floating enable
for_window [window_type="dialog"] floating enable
for_window [window_type="menu"] floating enable
for_window [class="Pavucontrol"] floating enable
for_window [class="Blueman-manager"] floating enable
for_window [class="Toggl Desktop"] floating enable
#for_window [class="Franz"] floating enable
#for_window [class="skype"] floating enable
#for_window [class="VirtualBox"] floating enable

# Sticky window
for_window [instance="file_progress"]  sticky enable
for_window [class="info|Mate-color-select|gcolor2|timesup|QtPass|GtkFileChooserDialog"] sticky enable

# Focus window settings
no_focus [window_role="pop-up"]
focus_on_window_activation focus 
#for_window [class="(?i)"] focus 

for_window [class="Google-chrome" instance="chromium"] border none

#/WORKSPACES BEHAVIOUR
######################

# CUSTOM BIND KEYS
##################

# Use Mouse+$mod to drag floating windows to their wanted position
floating_modifier $mod

# start a terminal
bindsym $mod+Return exec $terminal

# Custom bindsyms
bindsym $mod+p exec ~/.config/i3/bin/logout

# kill focused window
bindsym $mod+Shift+q kill

# start rofi (a program launcher)
bindsym $mod+d exec --no-startup-id ~/.config/i3/bin/rofi_app_launcher
bindsym $mod1+Tab exec --no-startup-id ~/.config/i3/bin/rofi_switcher
#bindsym $mod1+f exec --no-startup-id ~/.config/i3/bin/rofi_finder

# change focus
bindsym $mod+h focus left
bindsym $mod+j focus down
bindsym $mod+k focus up
bindsym $mod+l focus right

# move focused windows
bindsym $mod+Shift+h move left
bindsym $mod+Shift+j move down
bindsym $mod+Shift+k move up
bindsym $mod+Shift+l move right

# enter fullscreen mode for the focused container
#bindsym $mod+f fullscreen toggle

# Search
bindsym $mod+f exec --no-startup-id echo "" | rofi -dmenu -p "Search" -l 0 | xargs -I{} google-chrome-stable --app=https://www.google.it/search?q={}

# URL
bindsym $mod+Shift+f exec --no-startup-id echo "" | rofi -dmenu -p "URL" -l 0 | xargs -I{} google-chrome-stable --app=https://{}

# change container layout (stacked, tabbed, toggle split)
bindsym $mod+s layout stacking
bindsym $mod+w layout tabbed
bindsym $mod+e layout toggle split

bindsym $mod+minus split h;exec notify-send 'tile horizontally'
bindsym $mod+bar split v;exec notify-send 'tile vertically'
bindsym $mod+q split toggle

# toggle tiling / floating
bindsym $mod+Shift+space floating toggle

# change focus between tiling / floating windows
bindsym $mod+space focus mode_toggle

# toggle sticky
bindsym $mod+Shift+s sticky toggle

# focus the parent container
bindsym $mod+a focus parent

# focus the child container
# bindsym $mod+d focus child

# move the currently focused window to the scratchpad
bindsym $mod+Shift+minus move scratchpad

# Show the next scratchpad window or hide the focused scratchpad window.
# If there are multiple scratchpad windows, this command cycles through them.
bindsym $mod+Ctrl+minus scratchpad show

# switch to workspace
bindsym $mod+1 workspace $ws1
bindsym $mod+2 workspace $ws2
bindsym $mod+3 workspace $ws3
bindsym $mod+4 workspace $ws4
bindsym $mod+5 workspace $ws5
bindsym $mod+6 workspace $ws6
bindsym $mod+7 workspace $ws7
bindsym $mod+8 workspace $ws8
bindsym $mod+9 workspace $ws9

# cycle through workspaces
bindsym $mod+Ctrl+Right workspace next
bindsym $mod+Ctrl+Left workspace prev

# move focused container to workspace
bindsym $mod+Shift+1 move container to workspace $ws1
bindsym $mod+Shift+2 move container to workspace $ws2
bindsym $mod+Shift+3 move container to workspace $ws3
bindsym $mod+Shift+4 move container to workspace $ws4
bindsym $mod+Shift+5 move container to workspace $ws5
bindsym $mod+Shift+6 move container to workspace $ws6
bindsym $mod+Shift+7 move container to workspace $ws7
bindsym $mod+Shift+8 move container to workspace $ws8
bindsym $mod+Shift+9 move container to workspace $ws9

# Move to workspace with focused container
bindsym $mod+Ctrl+1 move container to workspace $ws1; workspace $ws1
bindsym $mod+Ctrl+2 move container to workspace $ws2; workspace $ws2
bindsym $mod+Ctrl+3 move container to workspace $ws3; workspace $ws3
bindsym $mod+Ctrl+4 move container to workspace $ws4; workspace $ws4
bindsym $mod+Ctrl+5 move container to workspace $ws5; workspace $ws5
bindsym $mod+Ctrl+6 move container to workspace $ws6; workspace $ws6
bindsym $mod+Ctrl+7 move container to workspace $ws7; workspace $ws7
bindsym $mod+Ctrl+8 move container to workspace $ws8; workspace $ws8
bindsym $mod+Ctrl+9 move container to workspace $ws8; workspace $ws8

# switch to workspace with urgent window automatically
for_window [urgent=latest] focus

# reload the configuration file
bindsym $mod+Shift+c reload

# restart i3 inplace (preserves your layout/session, can be used to upgrade i3)
bindsym $mod+Shift+r restart

# exit i3 (logs you out of your X session)
bindsym $mod+Shift+e exec "i3-nagbar -t warning -m 'You pressed the exit shortcut. Do you really want to exit i3? This will end your X session.' -b 'Yes, exit i3' 'i3-msg exit'"

# Resize mode
mode "resize" {
        # These bindings trigger as soon as you enter the resize mode

        # Pressing left will shrink the window’s width.
        # Pressing right will grow the window’s width.
        # Pressing up will shrink the window’s height.
        # Pressing down will grow the window’s height.
        bindsym j resize shrink width 5 px or 5 ppt
        bindsym k resize grow height 5 px or 5 ppt
        bindsym j resize shrink height 5 px or 5 ppt
        bindsym l resize grow width 5 px or 5 ppt

        bindsym Left resize shrink width 10 px or 10 ppt
        bindsym Down resize grow height 10 px or 10 ppt
        bindsym Up resize shrink height 10 px or 10 ppt
        bindsym Right resize grow width 10 px or 10 ppt

        # back to normal: Enter or Escape
        bindsym Return mode "default"
        bindsym Escape mode "default"
}
bindsym $mod+r mode "resize"

# Lock screen
bindsym $mod+x exec dm-tool lock

# Pulse Audio controls
bindsym XF86AudioRaiseVolume exec --no-startup-id pactl set-sink-volume $(pacmd list-sinks |awk '/* index:/{print $3}') +5% # Raise
bindsym XF86AudioLowerVolume exec --no-startup-id pactl set-sink-volume $(pacmd list-sinks |awk '/* index:/{print $3}') -5% # Lower
bindsym XF86AudioMute exec pactl set-sink-mute  $(pacmd list-sinks |awk '/* index:/{print $3}') toggle # Mute

# Screen brightness controls
bindsym XF86MonBrightnessUp exec xbacklight -inc 5    # increase screen brightness
bindsym XF86MonBrightnessDown exec xbacklight -dec 5  # decrease screen brightness

# Touchpad controls
#bindsym XF86TouchpadToggle exec ~/.toggletouchpad.sh  # toggle touchpad

# multimedia keys
bindsym XF86AudioPlay  exec "dbus-send --print-reply --dest=org.mpris.MediaPlayer2.spotify /org/mpris/MediaPlayer2 org.mpris.MediaPlayer2.Player.PlayPause"
#bindsym XF86AudioStop  exec "mpc stop"
bindsym XF86AudioNext  exec "dbus-send --print-reply --dest=org.mpris.MediaPlayer2.spotify /org/mpris/MediaPlayer2 org.mpris.MediaPlayer2.Player.Next"
bindsym XF86AudioPrev  exec "dbus-send --print-reply --dest=org.mpris.MediaPlayer2.spotify /org/mpris/MediaPlayer2 org.mpris.MediaPlayer2.Player.Previous"
#bindsym XF86AudioPause exec "mpc pause"

# Program shortcuts 
set $mode_launcher Launcher: (V)irtualbox (S)potify (F)ranz S(k)ype (G)oogle-Chrome (C)ode
bindsym $mod+o mode $mode_launcher
mode "$mode_launcher" { 
    bindsym v exec virtualbox , mode "default"
    bindsym s exec spotify , mode "default"
    bindsym f exec franz-bin , mode "default"
    bindsym k exec skyperforlinux , mode "default"
    bindsym g exec Google-chrome, mode "default"
    bindsym c exec code , mode "default"
    bindsym Esc mode "default"
    bindsym Return mode "default"
}

# Shutdown, Reboot, Lock Screen, and Logout 
set $power_mode (P)ower off (R)eboot (S)uspend (H)ibernate (L)ock (Q)uit i3
bindsym $mod+Shift+0 mode $power_mode
mode "$power_mode" {
    bindsym p         exec systemctl poweroff
    bindsym r         exec systemctl reboot
    bindsym s	      mode "default" , exec dm-tool lock && systemctl suspend
    bindsym l         mode "default" , exec dm-tool lock
    bindsym q         mode "default" , exec --no-startup-id i3-msg exit
    bindsym h         mode "default" , exec dm-tool lock && systemctl hibernate 
    bindsym Return    mode "default"
    bindsym Escape    mode "default"
}

# Color palette used for the terminal ( ~/.Xresources file )
# Colors are gathered based on the documentation:
# https://i3wm.org/docs/userguide.html#xresources
# Change the variable name at the place you want to match the color
# of your terminal like this:
# [example]
# If you want your bar to have the same background color as your 
# terminal background change the line 362 from:
# background #14191D
# to:
# background $term_background
# Same logic applied to everything else.
set_from_resource $term_background background
set_from_resource $term_foreground foreground
set_from_resource $term_color0     color0
set_from_resource $term_color1     color1
set_from_resource $term_color2     color2
set_from_resource $term_color3     color3
set_from_resource $term_color4     color4
set_from_resource $term_color5     color5
set_from_resource $term_color6     color6
set_from_resource $term_color7     color7
set_from_resource $term_color8     color8
set_from_resource $term_color9     color9
set_from_resource $term_color10    color10
set_from_resource $term_color11    color11
set_from_resource $term_color12    color12
set_from_resource $term_color13    color13
set_from_resource $term_color14    color14
set_from_resource $term_color15    color15

# Change autorandr profile
#bindsym $mod+x exec --no-startup-id "autorandr --change"

# Rename workspace with i3-input using numbers and text
#bindsym $mod+n exec i3-input -F 'rename workspace to "%s"' -P 'New name for this workspace: '

# screenshot
bindsym Print exec --no-startup-id i3-scrot
bindsym $mod+Print --release exec --no-startup-id i3-scrot -w
bindsym $mod+Shift+Print --release exec --no-startup-id i3-scrot -s

#bindsym --release Print exec --no-startup-id "maim -p 0 -c 0.96,0.5,0.09 $HOME/ownCloud/Screenshot/screenshot-$(date +%Y-%m-%d_%H-%M-%S).png"
#bindsym --release Shift+Print exec --no-startup-id "maim -s -p 0 -c 0.96,0.5,0.09 $HOME/ownCloud/Screenshot/screenshot-$(date +%Y-%m-%d_%H-%M-%S).png"

#/CUSTOM BIND KEYS
##################

# MISCELLANEOUS
###############

#Mouse warping
mouse_warping none
#mouse_warping out1|none

#Focus following mouse
focus_follows_mouse no

                        #BORDER    BACKGROUND   TEXT         INDICATOR   CHILD_BORDER
  client.focused          #556064 #556064 #80FFF9 #FDF6E3
  client.focused_inactive #2F3D44 #2F3D44 #1ABC9C #454948
  client.unfocused        #2F3D44 #2F3D44 #1ABC9C #454948
  client.urgent           #CB4B16 #FDF6E3 #1ABC9C #268BD2
  client.placeholder      #000000 #0c0c0c #ffffff #000000 

  client.background       #2B2C2B

# Startup programs
exec_always setxkbmap -layout it 
exec --no-startup-id dunst -conf ~/.config/dunst/dunstrc
exec --no-startup-id pasystray
exec_always --no-startup-id feh --bg-scale ~/MEGA/Images/Wallpaper/lucas-benjamin-wQLAGv4_OYs-unsplash.jpg
exec --no-startup-id redshift-gtk ~/.config/redshift/redshift.conf 
exec --no-startup-id owncloud
exec --no-startup-id libinput-gestures-setup start
exec --no-startup-id megasync
#exec --no-startup-id batterymon -t gnome
exec --no-startup-id nm-applet
exec --no-startup-id blueman-applet
exec_always --no-startup-id ~/.config/polybar/launch.sh
exec_always --no-startup-id sleep 2; compton --config ~/.config/compton/compton.conf -b

# Compton management
bindsym $mod+t exec --no-startup-id pkill compton
bindsym $mod+Ctrl+t exec --no-startup-id compton --config ~/.config/compton/compton.conf -b

# i3-gaps
# Set inner/outer gaps
gaps inner 14
gaps outer -2

# Additionally, you can issue commands with the following syntax. This is useful to bind keys to changing the gap size.
# gaps inner|outer current|all set|plus|minus <px>
# gaps inner all set 10
# gaps outer all plus 5

# Smart gaps (gaps used if only more than one container on the workspace)
smart_gaps on

# Smart borders (draw borders around container only if it is not the only container on this workspace) 
# on|no_gaps (on=always activate and no_gaps=only activate if the gap size to the edge of the screen is 0)
smart_borders on

# Press $mod+Shift+g to enter the gap mode. Choose o or i for modifying outer/inner gaps. Press one of + / - (in-/decrement for current workspace) or 0 (remove gaps for current workspace). If you also press Shift with these keys, the change will be global for all workspaces.
set $mode_gaps Gaps: (o) outer, (i) inner
set $mode_gaps_outer Outer Gaps: +|-|0 (local), Shift + +|-|0 (global)
set $mode_gaps_inner Inner Gaps: +|-|0 (local), Shift + +|-|0 (global)
bindsym $mod+Shift+g mode "$mode_gaps"

mode "$mode_gaps" {
        bindsym o      mode "$mode_gaps_outer"
        bindsym i      mode "$mode_gaps_inner"
        bindsym Return mode "default"
        bindsym Escape mode "default"
}
mode "$mode_gaps_inner" {
        bindsym plus  gaps inner current plus 5
        bindsym minus gaps inner current minus 5
        bindsym 0     gaps inner current set 0

        bindsym Shift+plus  gaps inner all plus 5
        bindsym Shift+minus gaps inner all minus 5
        bindsym Shift+0     gaps inner all set 0

        bindsym Return mode "default"
        bindsym Escape mode "default"
}
mode "$mode_gaps_outer" {
        bindsym plus  gaps outer current plus 5
        bindsym minus gaps outer current minus 5
        bindsym 0     gaps outer current set 0

        bindsym Shift+plus  gaps outer all plus 5
        bindsym Shift+minus gaps outer all minus 5
        bindsym Shift+0     gaps outer all set 0

        bindsym Return mode "default"
        bindsym Escape mode "default"
}

#/MISCELLANEOUS
###############
